############################################################################
#                                                                          #
#                                CORE RULES                                #
#                                                                          #
############################################################################

root = true

[*]
charset = utf-8
indent_style = space
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true

[*.sln]
indent_style = tab

[*.{csproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

[*.{xml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

[*.{json,json5,webmanifest}]
indent_size = 2

[*.{yml,yaml}]
indent_size = 2

[*.md]
trim_trailing_whitespace = false

[*.{htm,html,js,jsm,ts,tsx,css,sass,scss,less,svg,vue}]
indent_size = 2

[*.{cmd,bat}]
end_of_line = crlf

[*.sh]
end_of_line = lf

[Makefile]
indent_style = tab

############################################################################
#                                                                          #
#                              LANGUAGE RULES                              #
#                                                                          #
############################################################################

[*.cs]

### this and Me preferences (IDE0003 and IDE0009)
dotnet_style_qualification_for_field = true:warning     
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_event = true:warning

### Use language keywords instead of framework type names for type references (IDE0049)
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

### Modifier preferences
dotnet_style_require_accessibility_modifiers = always:warning   # Add accessibility modifiers (IDE0040)
dotnet_style_readonly_field = true:warning                      # Add readonly modifier (IDE0044)
csharp_prefer_static_local_function = true:warning              # Make local function static (IDE0062)
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async # Order modifiers (IDE0036)

### Parentheses preferences (IDE0047 and IDE0048)
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:warning                              # Use object initializers (IDE0017)
csharp_style_inlined_variable_declaration = true:warning                    # Inline variable declaration (IDE0018)
dotnet_style_collection_initializer = true:warning                          # Use collection initializers (IDE0028)
dotnet_style_prefer_auto_properties = true:warning                          # Use auto property (IDE0032)
dotnet_style_explicit_tuple_names = true:warning                            # Use explicitly provided tuple name (IDE0033)
csharp_prefer_simple_default_expression = true:warning                      # Simplify 'default' expression (IDE0034)
csharp_style_deconstructed_variable_declaration = true:warning              # Deconstruct variable declaration (IDE0042)
dotnet_style_prefer_conditional_expression_over_assignment = true:warning   # Use conditional expression for assignment (IDE0045)
dotnet_style_prefer_conditional_expression_over_return = true:warning       # Use conditional expression for return (IDE0046)
dotnet_style_prefer_compound_assignment = true:warning                      # Use compound assignment (IDE0054 and IDE0074)
csharp_style_prefer_index_operator = true:warning                           # Use index operator (IDE0056)
csharp_style_prefer_range_operator = true:warning                           # Use range operator (IDE0057)
dotnet_style_prefer_simplified_interpolation = true:warning                 # Simplify interpolation (IDE0071)
dotnet_style_prefer_simplified_boolean_expressions = true:warning           # Simplify conditional expression (IDE0075)
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning  # Simplify new expression (IDE0090)
dotnet_style_prefer_inferred_tuple_names = false:warning                    # Use inferred member name (tuples) (IDE0037)
dotnet_style_prefer_inferred_anonymous_type_member_names = false:warning    # Use inferred member name (anonymous type) (IDE0037)

# Null-checking preferences
csharp_style_throw_expression = true:warning                                    # Use throw expression (IDE0016)
dotnet_style_coalesce_expression = true:warning                                 # Use coalesce expression (IDE0029 and IDE0030)
dotnet_style_null_propagation = true:warning                                    # Use null propagation (IDE0031)
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning # Use is null check (IDE0041)
csharp_style_conditional_delegate_call = true:warning                           # Use conditional delegate call (IDE1005)

# var preferences (IDE0007 and IDE0008)
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Expression-bodied members
csharp_style_expression_bodied_constructors = true:warning      # Use expression body for constructors (IDE0021)
csharp_style_expression_bodied_methods = true:warning           # Use expression body for methods (IDE0022)
csharp_style_expression_bodied_operators = true:warning         # Use expression body for operators (IDE0023 and IDE0024)
csharp_style_expression_bodied_properties = true:warning        # Use expression body for properties (IDE0025)
csharp_style_expression_bodied_indexers = true:warning          # Use expression body for indexers (IDE0026)
csharp_style_expression_bodied_accessors = true:warning         # Use expression body for accessors (IDE0027)
csharp_style_expression_bodied_lambdas = true:warning           # Use expression body for lambdas (IDE0053)
csharp_style_expression_bodied_local_functions = true:warning   # Use expression body for local functions (IDE0061)

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning    # Use pattern matching to avoid 'as' followed by a 'null' check (IDE0019)
csharp_style_pattern_matching_over_is_with_cast_check = true:warning    # Use pattern matching to avoid 'is' check followed by a cast (IDE0020 and IDE0038)
csharp_style_prefer_switch_expression = true:warning                    # Use switch expression (IDE0066)
csharp_style_prefer_pattern_matching = true:warning                     # Use pattern matching (IDE0078)
csharp_style_prefer_not_pattern = true:warning                          # Use pattern matching (not operator) (IDE0083)

# Code block preferences
csharp_prefer_braces = true:warning                     # Add braces (IDE0011)
csharp_prefer_simple_using_statement = true:suggestion  # Use simple 'using' statement (IDE0063)

# using directive placement
csharp_using_directive_placement = outside_namespace:warning
dotnet_sort_system_directives_first = true

# Unnecessary code rules
dotnet_code_quality_unused_parameters = all:warning # Remove unused parameter (IDE0060)

############################################################################
#                                                                          #
#                             FORMATTING RULES                             #
#                                                                          #
############################################################################

# Newline options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

# Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrapping options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

############################################################################
#                                                                          #
#                               NAMING RULES                               #
#                                                                          #
############################################################################

### Styles

# camel_case_style: camelCase style
dotnet_naming_style.camel_case_style.capitalization = camel_case

# pascal_case_style: PascalCase style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# first_upper_style: the first character must start with an upper-case character
dotnet_naming_style.first_upper_style.capitalization = first_word_upper 

# prefix_interface_with_i_style: interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_with_i_style.capitalization    = pascal_case
dotnet_naming_style.prefix_interface_with_i_style.required_prefix   = I

# prefix_type_parameters_with_t_style: generic type parameters must be PascalCase and the first character must be a 'T'
dotnet_naming_style.prefix_type_parameters_with_t_style.capitalization  = pascal_case
dotnet_naming_style.prefix_type_parameters_with_t_style.required_prefix = T

# disallowed_style: anything that has this style applied is marked as disallowed
dotnet_naming_style.disallowed_style.capitalization  = pascal_case
dotnet_naming_style.disallowed_style.required_prefix = ____RULE_VIOLATION____
dotnet_naming_style.disallowed_style.required_suffix = ____RULE_VIOLATION____

### Naming rules

# (public | protected | protected internal) constant fields must be PascalCase
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_constant_fields_group.required_modifiers         = const
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_kinds           = field
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.symbols    = public_protected_constant_fields_group
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.style      = pascal_case_style
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.severity   = warning

# (public | protected | protected internal) static readonly fields must be PascalCase
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_static_readonly_fields_group.required_modifiers         = static, readonly
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_kinds           = field
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.symbols    = public_protected_static_readonly_fields_group
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.style      = pascal_case_style
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.severity   = warning

# No other (public | protected | protected internal) fields are allowed
dotnet_naming_symbols.other_public_protected_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.other_public_protected_fields_group.applicable_kinds           = field
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.symbols             = other_public_protected_fields_group
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.style               = disallowed_style
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.severity            = error

# All constant fields must be PascalCase
dotnet_naming_symbols.stylecop_constant_fields_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.stylecop_constant_fields_group.required_modifiers         = const
dotnet_naming_symbols.stylecop_constant_fields_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.symbols    = stylecop_constant_fields_group
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.style      = pascal_case_style
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.severity   = warning

# All static readonly fields must be PascalCase
dotnet_naming_symbols.stylecop_static_readonly_fields_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.stylecop_static_readonly_fields_group.required_modifiers         = static, readonly
dotnet_naming_symbols.stylecop_static_readonly_fields_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.symbols    = stylecop_static_readonly_fields_group
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.style      = pascal_case_style
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.severity   = warning

# No non-private instance fields are allowed
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.symbols               = stylecop_fields_must_be_private_group
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.style                 = disallowed_style
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.severity              = error

# Private fields must be camelCase
dotnet_naming_symbols.stylecop_private_fields_group.applicable_accessibilities = private
dotnet_naming_symbols.stylecop_private_fields_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.symbols     = stylecop_private_fields_group
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.style       = camel_case_style
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.severity    = warning

# Local variables must be camelCase
dotnet_naming_symbols.stylecop_local_fields_group.applicable_accessibilities = local
dotnet_naming_symbols.stylecop_local_fields_group.applicable_kinds           = local
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.symbols     = stylecop_local_fields_group
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.style       = camel_case_style
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.severity    = silent

# Namespaces, classes, enums, structs, delegates, events, methods, properties
dotnet_naming_symbols.element_group.applicable_kinds = namespace, class, enum, struct, delegate, event, method, property
dotnet_naming_rule.element_rule.symbols              = element_group
dotnet_naming_rule.element_rule.style                = pascal_case_style
dotnet_naming_rule.element_rule.severity             = warning

# Interfaces use PascalCase and are prefixed with uppercase 'I'
dotnet_naming_symbols.interface_group.applicable_kinds = interface
dotnet_naming_rule.interface_rule.symbols              = interface_group
dotnet_naming_rule.interface_rule.style                = prefix_interface_with_i_style
dotnet_naming_rule.interface_rule.severity             = warning

# Generic type parameters use PascalCase and are prefixed with uppercase 'T'
dotnet_naming_symbols.type_parameter_group.applicable_kinds = type_parameter
dotnet_naming_rule.type_parameter_rule.symbols              = type_parameter_group
dotnet_naming_rule.type_parameter_rule.style                = prefix_type_parameters_with_t_style
dotnet_naming_rule.type_parameter_rule.severity             = warning

# Function parameters use camelCase
dotnet_naming_symbols.parameters_group.applicable_kinds = parameter
dotnet_naming_rule.parameters_rule.symbols              = parameters_group
dotnet_naming_rule.parameters_rule.style                = camel_case_style
dotnet_naming_rule.parameters_rule.severity             = warning
